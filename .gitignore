# Text-to-SQL Assistant - Git Ignore Configuration

# ========================
# Environment & Secrets
# ========================
.env
.env.local
.env.development
.env.test
.env.production
*.env

# API Keys and secrets (backup)
config/secrets.py
config/api_keys.py
src/utils/secrets.py

# ========================
# Python
# ========================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ========================
# FastAPI / Web Development
# ========================
# Static files (if generated)
static/dist/
static/build/

# ========================
# Database
# ========================
# SQLite databases (if using local SQLite for testing)
*.db
*.sqlite
*.sqlite3
database.db
test.db

# Database dumps
*.sql.backup
*.dump
backup/

# ========================
# AI/ML Models & Data
# ========================
# Model files (if storing locally)
models/
*.pkl
*.joblib
*.h5
*.hdf5
*.pb

# Datasets (if large)
data/raw/
data/processed/
data/interim/
data/external/
*.csv.backup
*.parquet
*.feather

# Model checkpoints
checkpoints/
lightning_logs/

# ========================
# Logs & Monitoring
# ========================
logs/
*.log
*.log.*
log_*.txt

# Monitoring and metrics
prometheus_data/
grafana_data/

# ========================
# IDE & Development Tools
# ========================
# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# PyCharm
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*~
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ========================
# Operating System
# ========================
# macOS
.DS_Store
.AppleDouble
.LSOverride

# macOS Thumbnails
._*

# macOS Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Windows Dump file
*.stackdump

# Windows folder config file
[Dd]esktop.ini

# Windows Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Linux
*~

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# ========================
# Temporary & Cache Files
# ========================
# Temporary files
tmp/
temp/
*.tmp
*.temp
*.swp
*.swo
*.bak
*.backup

# Cache directories
.cache/
cache/
__pycache__/

# ========================
# Documentation & Build
# ========================
# Generated documentation
docs/build/
docs/_build/
site/

# Build artifacts
build/
dist/

# ========================
# Testing & Coverage
# ========================
# Test artifacts
test_results/
test_reports/
.pytest_cache/
.coverage
htmlcov/

# ========================
# Docker & Containerization
# ========================
# Docker files (if using)
docker-compose.override.yml
.dockerignore

# ========================
# Deployment & Production
# ========================
# Production configs
config/production.py
config/staging.py

# SSL certificates
*.pem
*.key
*.crt
*.p12

# ========================
# Project Specific
# ========================
# Demo and test outputs
demo_output/
test_queries.sql
sample_results.json

# Development scripts
dev_scripts/
scratch/
playground/

# Backup files
*.bak
project_backup/

# ========================
# KEEP THESE FILES
# ========================
# Explicitly keep these important files
!.env.example
!requirements.txt
!README.md
!IMPLEMENTATION_PLAN.md
!API_DOCUMENTATION.md
!DIRECTORY_STRUCTURE.md
!SUPABASE_SETUP.md
!project.md
